-- 查询全部的学生
SELECT * FROM student

SELECT * FROM result

-- 查询指定字段
SELECT `studentno`,`studentname` FROM student

-- 别名，给结果起一个名字  AS 可以给字段或表起别名 
SELECT `studentno` AS 学号,`studentname` AS 学生姓名 FROM student

-- 函数 Concat(a,b)
SELECT CONCAT('姓名：',studentname) AS 新名字 FROM student

-- 查询一下有哪些同学参加了考试，成绩
SELECT * FROM result -- 查询全部的考试成绩
-- 查询有哪些同学参加了考试
SELECT `studentno` FROM result

-- 发现重复数据，去重
SELECT DISTINCT `studentno` FROM result

-- 查看系统的版本(函数)
SELECT VERSION()
SELECT 100*3-1 AS 计算结果  -- 用来计算(表达式)
SELECT @@auto_increment_increment -- 查询自增的步长(变量)

-- 学员考试成绩 + 1分查看
SELECT `studentno`,`studentresult`+1 AS '提分后' FROM result

-- ==============================================

SELECT studentno , `studentresult` FROM result

-- 查询考试成绩在95~100分之间
SELECT studentno , `studentresult` FROM result
WHERE studentresult>=95 AND studentresult<=100

-- and  &&
SELECT studentno , `studentresult` FROM result
WHERE studentresult>=95 && studentresult<=100

-- 模糊查询(区间)
SELECT studentno , `studentresult` FROM result
WHERE studentresult BETWEEN 95 AND 100

-- 除了1000号学生之外的同学的成绩
SELECT studentno , `studentresult` FROM result
WHERE studentno!=1000

-- != not
SELECT studentno , `studentresult` FROM result
WHERE NOT studentno=1000

-- !=  <>
SELECT studentno , `studentresult` FROM result
WHERE studentno<>1000

-- ===========联表查询 join==========

-- 查询参加了考试的同学(学号，姓名，科目编号，分数)
SELECT * FROM student
SELECT * FROM result

/*思路
1.分析需求,分析査询的字段来白哪些表,(连接查询)
2.确定使用哪种连接査询?7种
确定交叉点(这两个表中哪个数据是相同的)
判断的条件:学生表的中 studentNo=成绩表 studentNo
*/
SELECT s.`studentno`,`studentname`,`subjectno`,`studentresult`
FROM student AS s
INNER JOIN result AS r
WHERE s.`studentno`=r.`studentno`

-- right join
SELECT s.`studentno`,`studentname`,`subjectno`,`studentresult`
FROM student s
RIGHT JOIN result r
ON s.`studentno`=r.`studentno`

-- left join
SELECT s.`studentno`,`studentname`,`subjectno`,`studentresult`
FROM student s
LEFT JOIN result r
ON s.`studentno`=r.`studentno`

-- join (连接的表) on (判断的条件)连接查询
-- where 等值查询
-- 查找缺考的同学
SELECT s.`studentno`,`studentname`,`subjectno`,`studentresult`
FROM student s
LEFT JOIN result r
ON s.`studentno`=r.`studentno`
WHERE `studentresult` IS NULL

-- 思考题(查询参加了考试的学生信息：学号，学生姓名，科目名，分数)
SELECT s.`studentno`,`studentname`,`subjectname`,`studentresult`
FROM `student` s
RIGHT JOIN `result` r
ON r.`studentno`=s.`studentno`
INNER JOIN `subject` sub
ON r.`subjectno`=sub.`subjectno`

-- 我要查询哪些数据 select...
-- 从哪几个表中查 from 表 xxx join 连接的表 on 交叉条件
-- 假设存在一种多张表查询，慢慢来，先查两张表然后再增加

-- 查询父子信息
SELECT a.`categoryname` '父栏目',b.`categoryname` '子栏目'
FROM `category` a,`category` b
WHERE a.`categoryid`=b.`pid`

-- 查询学院所属的年级(学号，学生姓名，年级名称)
SELECT `studentno`,`studentname`,`gradename`
FROM `student` s
INNER JOIN `grade` g
ON s.`gradeid`=g.`gradeid`

-- 查询科目所属的年级(科目名称，年级名称)
SELECT `subjectname`,`gradename`
FROM `subject` sub
INNER JOIN `grade` g
ON sub.`gradeid`=g.`gradeid`

-- 查询参加了 数据库结构-1 考试的学生信息：学号，学生姓名，科目名，分数
SELECT s.`studentno`,s.`studentname`,`subjectname`,`studentresult`
FROM `student` s
INNER JOIN `result` r
ON s.`studentno`=r.`studentno`
INNER JOIN `subject` sub
ON r.`subjectno`=sub.`subjectno`
WHERE `subjectname`='数据库结构-1'

-- 排序：升序 ASC  ， 降序  DESC
-- 查询的结果根据 成绩降序 升序
SELECT s.`studentno`,`studentname`,`subjectname`,`studentresult`
FROM `student` s
RIGHT JOIN `result` r
ON r.`studentno`=s.`studentno`
INNER JOIN `subject` sub
ON r.`subjectno`=sub.`subjectno`
ORDER BY `studentresult` DESC

-- 为什么要分页？
-- 缓解数据压力，给人的体验更好，瀑布流
-- 分页，每页只显示两条数据
-- 语法：limit 起始值，页面的大小
SELECT s.`studentno`,`studentname`,`subjectname`,`studentresult`
FROM `student` s
RIGHT JOIN `result` r
ON r.`studentno`=s.`studentno`
INNER JOIN `subject` sub
ON r.`subjectno`=sub.`subjectno`
ORDER BY `studentresult` DESC
LIMIT 0,5
--  limit0,5    (n-1)* pagesize, pagesize
-- 【 pagesize:页面大小】
-- 【(n-1)* pagesize:起始值】
-- 【数据总数/页面大小=总页数】

-- =============where=============
-- 1、查询数据库结构-1  的所有考试结果(学号，科目编号，成绩)，降序排列
-- 方式一：使用连接查询
SELECT `studentno`,`subjectname`,`studentresult`
FROM `result` r
INNER JOIN `subject` sub
ON r.`subjectno`=sub.`subjectno`
WHERE `subjectname`='数据库结构-1'
ORDER BY `studentresult` DESC

-- 方式二：使用子查询()
SELECT `studentno`,`subjectno`,`studentresult`
FROM `result`
WHERE `subjectno` = (
      SELECT `subjectno` FROM `subject`
      WHERE `subjectname`='数据库结构-1'
)
ORDER BY DESC

-- 分数不小于80分的学生的学号和姓名
SELECT DISTINCT `studentno`,`studentname`
FROM `student` s
INNER JOIN `result` r
ON r.`studentno` = s.`studentno`
WHERE `studentresult`>=80

-- 在这个基础上增加一个科目，高等数学-2
-- 查询高等数学-2的编号
SELECT DISTINCT `studentno`,`studentname`
FROM `student` s
INNER JOIN `result` r
ON r.`studentno` = s.`studentno`
WHERE `studentresult`>=80 AND `subjectno`=(
     SELECT `subjectno`
     FROM `subject`
     WHERE `subjectname`='高等数学-2'
)

-- 查询课程为 高等数学-2 且分数不小于 80 的同学的学号和姓名
SELECT s.`studentno`,`studentname`
FROM `student` s
INNER JOIN `result` r
ON s.`studentno`=r.`studentno`
INNER JOIN `subject` sub
ON r.`subjectno`=sub.`subjectno`
WHERE `subjectname`='高等数学-2' AND `studentresult`>=80

-- 再改造
SELECT `studentno`,`studentname` FROM student WHERE `studentno` IN(
    SELECT `studentno` FROM `result` WHERE `studentresult`>80 AND `subjectno` = (
	SELECT `subjectno` FROM `subject` WHERE `subjectname`='高等数学-2'
    )
)

-- 查询不同课程的平均分，最高分，最低分,平均分大于80
-- 核心：(通过不同课程分组)
SELECT `subjectname`,AVG(`studentresult`) 平均分,MAX(`studentresult`),MIN(`studentresult`)
FROM `result` r
INNER JOIN `subject` sub
ON r.`subjectno`=sub.`subjectno`
GROUP BY r.`subjectno`
HAVING 平均分>80

